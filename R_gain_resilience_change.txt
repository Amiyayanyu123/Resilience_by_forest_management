library(raster)
library(lubridate)
library(tidyverse)
library(ggpmisc)
library(ggpubr)
#
tempdir <- function() "D:\\temp_data"# 修改为d盘路径
unlockBinding("tempdir", baseenv())
utils::assignInNamespace("tempdir", tempdir, ns="base", envir=baseenv())
assign("tempdir", tempdir, baseenv())
lockBinding("tempdir", baseenv())

##############################################vegetation resilience vs coverage
setwd("I:\\PF_NF_climate_sensitivity\\all_datasets_reproduce\\forest_gain_loss_resiliencechange")

all <- stack("all.tif")

slope <- stack("slope.tif")

coverage <- stack("tree_coverage.tif")

multi_frame <-
  as.data.frame(all , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3))

multi_frame$slope = raster::extract(slope ,multi_frame[,1:2])
multi_frame$coverage = raster::extract(coverage ,multi_frame[,1:2])

multi_frame = multi_frame %>% na.omit()
colnames(multi_frame) = c("x","y","gain","loss","change_resilience","coverage")
multi_frame$final = multi_frame$gain - multi_frame$loss
multi_frame = multi_frame %>% dplyr::filter(final > 0 & coverage >10)

se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}

statis_plot_1 = multi_frame %>% na.omit() %>%
  mutate(bin_LAI = cut(coverage, breaks = quantile(coverage, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median_vege = median(coverage, na.rm = TRUE),
            Q25_vege = quantile(coverage,probs = 0.25, na.rm = TRUE),
            Q75_vege = quantile(coverage,probs = 0.75, na.rm = TRUE) )  %>% na.omit() 

statis_plot_2 = multi_frame %>% na.omit() %>%
  mutate(bin_LAI_1 = cut(coverage, breaks = quantile(coverage, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  group_by(bin_LAI_1) %>% 
  summarise(median_cli = median(change_resilience, na.rm = TRUE)*1000,
            Q25_cli = quantile(change_resilience,probs = 0.25, na.rm = TRUE)*1000,
            Q75_cli = quantile(change_resilience,probs = 0.75, na.rm = TRUE)*1000 ) %>% na.omit() 

statis_plot = cbind(statis_plot_1,statis_plot_2) %>% as.data.frame()


A = ggplot(statis_plot, aes(x = median_vege, y = median_cli)) +
  geom_errorbar(data = statis_plot,aes(x= median_vege, y= median_cli, ymin=Q25_cli, ymax=Q75_cli), width=0,size=0.5, 
                position=position_dodge(0.8))+geom_errorbarh(aes(xmin=Q25_vege, xmax=Q75_vege),size=0.5)+geom_point(size = 3)+
  geom_smooth(method = "lm", formula = y ~ log(x),color = "red",linetype = "dashed") +
  labs(x="Forest Coverage (%)", y = "Vegetation resilience change") +
  stat_poly_eq(formula = y ~ log(x),aes(label = paste( ..rr.label.., sep = "~~~")), 
               parse=TRUE,label.y.npc = "bottom",label.x.npc = "right",size = 6)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="right",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
#########################################################################################
setwd("I:\\PF_NF_climate_sensitivity\\all_datasets_reproduce\\forest_gain_loss_resiliencechange")

all <- stack("all.tif")

slope <- stack("slope.tif")

coverage <- stack("tree_coverage.tif")

multi_frame <-
  as.data.frame(all , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3))

multi_frame$slope = raster::extract(slope ,multi_frame[,1:2])
multi_frame$coverage = raster::extract(coverage ,multi_frame[,1:2])

multi_frame = multi_frame %>% na.omit()
colnames(multi_frame) = c("x","y","gain","loss","change_resilience","coverage")
multi_frame$final = multi_frame$gain - multi_frame$loss
multi_frame = multi_frame %>% dplyr::filter(final > 0 & coverage >10)

se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}

statis_plot_1 = multi_frame %>% na.omit() %>%
  mutate(bin_LAI = cut(final, breaks = quantile(final, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median_vege = median(final, na.rm = TRUE)*100,
            Q25_vege = quantile(final,probs = 0.25, na.rm = TRUE)*100,
            Q75_vege = quantile(final,probs = 0.75, na.rm = TRUE)*100 )  %>% na.omit() 

statis_plot_2 = multi_frame %>% na.omit() %>%
  mutate(bin_LAI_1 = cut(final, breaks = quantile(final, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  group_by(bin_LAI_1) %>% 
  summarise(median_cli = median(change_resilience, na.rm = TRUE)*1000,
            Q25_cli = quantile(change_resilience,probs = 0.25, na.rm = TRUE)*1000,
            Q75_cli = quantile(change_resilience,probs = 0.75, na.rm = TRUE)*1000 ) %>% na.omit() 

statis_plot = cbind(statis_plot_1,statis_plot_2) %>% as.data.frame()


B = ggplot(statis_plot, aes(x = median_vege, y = median_cli)) +
  geom_errorbar(data = statis_plot,aes(x= median_vege, y= median_cli, ymin=Q25_cli, ymax=Q75_cli), width=0,size=0.5, 
                position=position_dodge(0.8))+geom_errorbarh(aes(xmin=Q25_vege, xmax=Q75_vege),size=0.5)+geom_point(size = 3)+
  geom_smooth(method = "lm", formula = y ~ log(x),color = "red",linetype = "dashed") +
  labs(x="Coverage Gain (%)", y = "Vegetation resilience change") +
  stat_poly_eq(formula = y ~ log(x),aes(label = paste( ..rr.label.., sep = "~~~")), 
               parse=TRUE,label.y.npc = "bottom",label.x.npc = "right",size = 6)+
  scale_y_continuous( breaks = seq(0.02, 0.14, 0.02)) +
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="right",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
#heatmap
multi_frame$final = multi_frame$final*100

statis_plot = multi_frame %>%  na.omit() %>%
  mutate(bin_DI = cut(final, breaks = quantile(final, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  mutate(bin_LAI = cut(coverage, breaks = quantile(coverage, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  group_by(bin_DI,bin_LAI) %>% 
  summarise(median = median(change_resilience, na.rm = TRUE)) %>% na.omit()

C = ggplot(statis_plot, aes(x = bin_LAI, y = bin_DI, fill = median)) + 
  geom_tile()+
  scale_fill_distiller(palette = "Spectral",limits = c(0.00005, 0.00025)) +labs(x="Forest Coverage", y = "Coverage Gain") +
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        axis.text.x = element_text(size=14,angle = 60),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="right",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

###################################################################################PF
setwd("I:\\PF_NF_climate_sensitivity\\all_datasets_reproduce\\forest_gain_loss_resiliencechange")

resilience_change <- stack("all_PF.tif")

change_fraction <- stack("PF_change.tif")

multi_frame <-
  as.data.frame(resilience_change , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3))

multi_frame$gain = raster::extract(change_fraction ,multi_frame[,1:2])

multi_frame = multi_frame %>% na.omit()
colnames(multi_frame) = c("x","y","resilience_change","gain")

se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}
statis_plot_1 = multi_frame %>% na.omit() %>%
  mutate(bin_LAI = cut(gain, breaks = quantile(gain, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median_vege = median(gain, na.rm = TRUE)*100,
            Q25_vege = quantile(gain,probs = 0.25, na.rm = TRUE)*100,
            Q75_vege = quantile(gain,probs = 0.75, na.rm = TRUE)*100 )  %>% na.omit() 

statis_plot_2 = multi_frame %>% na.omit() %>%
  mutate(bin_LAI_1 = cut(gain, breaks = quantile(gain, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  group_by(bin_LAI_1) %>% 
  summarise(median_cli = median(resilience_change, na.rm = TRUE)*1000,
            Q25_cli = quantile(resilience_change,probs = 0.25, na.rm = TRUE)*1000,
            Q75_cli = quantile(resilience_change,probs = 0.75, na.rm = TRUE)*1000 ) %>% na.omit() 

statis_plot = cbind(statis_plot_1,statis_plot_2) %>% as.data.frame()

D = ggplot(statis_plot, aes(x = median_vege, y = median_cli)) +
  geom_errorbar(data = statis_plot,aes(x= median_vege, y= median_cli, ymin=Q25_cli, ymax=Q75_cli), width=0,size=0.5, 
                position=position_dodge(0.8))+geom_errorbarh(aes(xmin=Q25_vege, xmax=Q75_vege),size=0.5)+geom_point(size = 3)+
  geom_smooth(method = "lm", formula = y ~ log(x),color = "red",linetype = "dashed") +
  labs(x="Forest Gain in PF pixels", y = "Resilience change") +
  stat_poly_eq(formula = y ~ log(x),aes(label = paste( ..rr.label.., sep = "~~~")), 
               parse=TRUE,label.y.npc = "bottom",label.x.npc = "right",size = 6)+
  scale_y_continuous(limits = c(0.02, 0.14), breaks = seq(0.02, 0.14, 0.02)) +
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="right",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

#######################################################################################

setwd("I:\\PF_NF_climate_sensitivity\\all_datasets_reproduce\\forest_gain_loss_resiliencechange")

resilience_change <- stack("all_NF.tif")

change_fraction <- stack("NF_change.tif")

multi_frame <-
  as.data.frame(resilience_change , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3))

multi_frame$gain = raster::extract(change_fraction ,multi_frame[,1:2])

multi_frame = multi_frame %>% na.omit()
colnames(multi_frame) = c("x","y","resilience_change","gain")

se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}
statis_plot_1 = multi_frame %>% na.omit() %>%
  mutate(bin_LAI = cut(gain, breaks = quantile(gain, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median_vege = median(gain, na.rm = TRUE)*100,
            Q25_vege = quantile(gain,probs = 0.25, na.rm = TRUE)*100,
            Q75_vege = quantile(gain,probs = 0.75, na.rm = TRUE)*100 )  %>% na.omit() 

statis_plot_2 = multi_frame %>% na.omit() %>%
  mutate(bin_LAI_1 = cut(gain, breaks = quantile(gain, probs = seq(0, 1, by = 0.1), na.rm = TRUE))) %>% 
  group_by(bin_LAI_1) %>% 
  summarise(median_cli = median(resilience_change, na.rm = TRUE)*1000,
            Q25_cli = quantile(resilience_change,probs = 0.25, na.rm = TRUE)*1000,
            Q75_cli = quantile(resilience_change,probs = 0.75, na.rm = TRUE)*1000 ) %>% na.omit() 

statis_plot = cbind(statis_plot_1,statis_plot_2) %>% as.data.frame()

E = ggplot(statis_plot, aes(x = median_vege, y = median_cli)) +
  geom_errorbar(data = statis_plot,aes(x= median_vege, y= median_cli, ymin=Q25_cli, ymax=Q75_cli), width=0,size=0.5, 
                position=position_dodge(0.8))+geom_errorbarh(aes(xmin=Q25_vege, xmax=Q75_vege),size=0.5)+geom_point(size = 3)+
  geom_smooth(method = "lm", formula = y ~ log(x),color = "red",linetype = "dashed") +
  labs(x="Forest Gain in NF pixels", y = "Resilience Change") +
  scale_y_continuous(limits = c(0.01, 0.07), breaks = seq(0.01, 0.07, 0.01)) +
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="right",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

##################################################
library(ggpubr)
a = ggarrange(A,B,D,E,ncol = 2, nrow = 2)
C

























